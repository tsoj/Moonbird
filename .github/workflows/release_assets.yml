name: Release Assets

on:
  release:
    types: [created]

jobs:
  release_assets:
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        branch: [master]
        target:
          - os: linux
            cpu: amd64
            nim_branch: devel
          - os: windows
            cpu: amd64
            nim_branch: devel
          - os: macos
            cpu: amd64
            nim_branch: devel
        include:
          - target:
              os: linux
            builder: ubuntu-22.04
          - target:
              os: windows
            builder: windows-2022
          - target:
              os: macos
            builder: macos-14

    name: '${{ matrix.target.os }}-${{ matrix.target.cpu }}-nim-${{ matrix.target.nim_branch }} (${{ matrix.branch }})'
    runs-on: ${{ matrix.builder }}
    env:
      NIM_DIR: nim-${{ matrix.target.nim_branch }}-${{ matrix.target.cpu }}
      NIM_BRANCH: ${{ matrix.target.nim_branch }}
      NIM_ARCH: ${{ matrix.target.cpu }}
    steps:
      - name: Checkout Moonbird
        uses: actions/checkout@v3
        with:
          path: Moonbird
          submodules: false

      - name: Install DLLs dependencies (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          mkdir -p external
          curl -L "https://nim-lang.org/download/windeps.zip" -o external/windeps.zip
          7z x -y external/windeps.zip -oexternal/dlls-${{ matrix.target.cpu }}

      - name: Setup Nim
        uses: alaviss/setup-nim@0.1.1
        with:
          path: 'nim'
          version: ${{ matrix.target.nim_branch }}
          architecture: ${{ matrix.target.cpu }}

      - name: Build binary
        shell: bash
        run: |
          cd Moonbird
          if [ ${{ runner.os }} = 'macOS' ]; then
            nim default Moonbird
          else
            nim default --passL:"-static" Moonbird
          fi

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: ./Moonbird/bin/Moonbird${{ runner.os == 'Windows' && '.exe' || '' }}
          name: Moonbird-${{ github.event.release.tag_name }}-${{ matrix.target.os }}-${{ matrix.target.cpu }}${{ runner.os == 'Windows' && '.exe' || '' }}
          content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}